<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:TypeCode.Wpf.Helper.Converters"
                    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behaviours="clr-namespace:TypeCode.Wpf.Helper.Behaviours"
                    xmlns:comboBox="clr-namespace:TypeCode.Wpf.Controls.ComboBox"
                    xmlns:triggers="clr-namespace:TypeCode.Wpf.Helper.Triggers"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" True="Visible" False="Collapsed" />
    <converters:BooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" True="Collapsed"
                                                 False="Visible" />
    <converters:ObjectToStringConverter x:Key="ObjectToStringConverter"/>
    <system:Boolean x:Key="False">False</system:Boolean>
    
    <Style TargetType="{x:Type comboBox:CustomComboBox}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type comboBox:CustomComboBox}">

                    <Grid Validation.ErrorTemplate="{x:Null}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <Border
                            VerticalAlignment="Center"
                            Grid.Row="0"
                            Grid.Column="0">

                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="BorderThickness" Value="1"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged}"
                                            Value="false">
                                            <Setter Property="BorderBrush"
                                                    Value="{StaticResource Accent}" />
                                        </DataTrigger>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged}"
                                            Value="true">
                                            <Setter Property="BorderBrush"
                                                    Value="{StaticResource Error}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <TextBlock x:Name="InputTextBox"
                                       Grid.Column="0"
                                       Margin="4"
                                       Validation.ErrorTemplate="{x:Null}"
                                       Text="{Binding Path=SelectedComboBoxItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                            </TextBlock>

                        </Border>

                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Padding="2"
                                   Foreground="{StaticResource Error}"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.HasError), UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Validation.Errors)/ErrorContent, UpdateSourceTrigger=PropertyChanged}" />

                        <Popup
                            Grid.Row="0"
                            Grid.Column="0"
                            StaysOpen="False"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=InputTextBox}"
                            Width="{Binding ActualWidth, ElementName=InputTextBox}"
                            IsOpen="{TemplateBinding IsComboBoxDropDownOpen}">


                            <ListBox
                                Name="ComboBoxListBox"
                                MaxWidth="{Binding ActualWidth, ElementName=InputTextBox}"
                                Margin="1"
                                MaxHeight="100"
                                BorderThickness="1"
                                Background="{StaticResource Primary}"
                                BorderBrush="{StaticResource Accent}"
                                ItemsSource="{Binding Path=ComboBoxItems, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                                behaviours:SourceChangedScrollTopBehaviour.ScrollToTop="True">

                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="SelectionChanged">
                                        <triggers:SetPropertyActionTrigger
                                            PropertyName="SelectedComboBoxItem"
                                            TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type comboBox:CustomComboBox}}}"
                                            PropertyValue="{Binding ElementName=ComboBoxListBox, Path=SelectedItem}">
                                        </triggers:SetPropertyActionTrigger>
                                    </b:EventTrigger>
                                    <b:EventTrigger EventName="SelectionChanged">
                                        <triggers:SetPropertyActionTrigger
                                            PropertyName="IsComboBoxDropDownOpen"
                                            TargetObject="{Binding RelativeSource={RelativeSource AncestorType={x:Type comboBox:CustomComboBox}}}"
                                            PropertyValue="{StaticResource False}">
                                        </triggers:SetPropertyActionTrigger>
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource ObjectToStringConverter}}" ToolTip="{Binding}"
                                                   TextTrimming="CharacterEllipsis" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel IsVirtualizing="True"
                                                                VirtualizationMode="Recycling">
                                        </VirtualizingStackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>

                            </ListBox>

                        </Popup>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>