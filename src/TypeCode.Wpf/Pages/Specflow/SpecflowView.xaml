<UserControl x:Class="TypeCode.Wpf.Pages.Specflow.SpecflowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:specflow="clr-namespace:TypeCode.Wpf.Pages.Specflow"
             xmlns:c="clr-namespace:TypeCode.Wpf.Helper.Controls"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance specflow:SpecflowViewModel}">

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                 Padding="2" Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
                 HorizontalAlignment="Stretch"
                 HorizontalContentAlignment="Stretch"
                 ToolTip="Input type name. Multiple type names can be seperated by using ','">
            <TextBox.InputBindings>
                <KeyBinding Key="Enter" Command="{Binding GenerateCommand}" />
            </TextBox.InputBindings>
        </TextBox>

        <StackPanel Margin="0,5,0,5" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
            <CheckBox Content="Include Strings"
                      ToolTip="Nullable strings can't be detected automatically with option required. Decision is yours."
                      Foreground="{StaticResource PrimaryText}"
                      IsChecked="{Binding IncludeStrings}">
            </CheckBox>
            <CheckBox Margin="5,0,0,0"
                      Content="Only Required"
                      ToolTip="Only required properties will be included. Specflow can execute with these properties only."
                      Foreground="{StaticResource PrimaryText}"
                      IsChecked="{Binding OnlyRequired}">
            </CheckBox>
            <CheckBox Margin="5,0,0,0"
                      Content="Sort Alphabetically"
                      ToolTip="Properties can be sorted alphabetically. Default is the order of the properties in the class. Id's or navigation properties are always at the beginning."
                      Foreground="{StaticResource PrimaryText}"
                      IsChecked="{Binding SortAlphabetically}">
            </CheckBox>
        </StackPanel>

        <Grid Margin="0,5,0,0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0"
                     Padding="2" Background="Transparent"
                     BorderThickness="0"
                     Text="{Binding Output, Mode=OneWay}"
                     IsReadOnly="True"
                     TextWrapping="Wrap"
                     VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
            <c:CustomIconButton Grid.Column="0" Grid.Row="1" Command="{Binding CopyToClipboardCommand}">
                <Image Source="{StaticResource CopyDrawingImage}" />
            </c:CustomIconButton>
        </Grid>

        <Separator Margin="0,5,0,5" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" />

        <c:CustomButton Grid.Row="4" Grid.Column="1" Command="{Binding GenerateCommand}">Generate</c:CustomButton>
    </Grid>
</UserControl>