<UserControl x:Class="TypeCode.Wpf.Pages.Mapper.MapperView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:style="clr-namespace:TypeCode.Business.Mode.Mapper.Style;assembly=TypeCode.Business"
             xmlns:mapper="clr-namespace:TypeCode.Wpf.Pages.Mapper"
             xmlns:buttons="clr-namespace:TypeCode.Wpf.Components.Buttons"
             xmlns:inputBox="clr-namespace:TypeCode.Wpf.Components.InputBox"
             xmlns:outputBox="clr-namespace:TypeCode.Wpf.Components.OutputBox"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance mapper:MapperViewModel}">

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <inputBox:InputBoxView Grid.Row="0" DataContext="{Binding InputBoxViewModel}"></inputBox:InputBoxView> 

        <StackPanel Margin="0,5,0,0" Grid.Row="1">
            <RadioButton GroupName="Style" IsChecked="True" Command="{Binding StyleCommand}"
                         CommandParameter="{x:Static style:MappingStyle.New}">
                Map to new
            </RadioButton>
            <RadioButton GroupName="Style" Command="{Binding StyleCommand}"
                         CommandParameter="{x:Static style:MappingStyle.Existing}">
                Map to existing
            </RadioButton>
            <CheckBox Content="Recursive"
                      ToolTip="Maps all complex subtypes of class recursively."
                      Foreground="{StaticResource PrimaryText}"
                      IsChecked="{Binding Recursiv}">
            </CheckBox>
            <CheckBox Content="Single direction"
                      ToolTip="Maps single direction only. (Class to OtherClass, not Class from/to OtherClass)"
                      Foreground="{StaticResource PrimaryText}"
                      IsChecked="{Binding SingleDirectionOnly}">
            </CheckBox>
        </StackPanel>

        <outputBox:OutputBoxView Margin="0,5,0,0" Grid.Row="2" DataContext="{Binding OutputBoxViewModel}"></outputBox:OutputBoxView>
    </Grid>
</UserControl>